// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.6.1
// source: center.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{0}
}

func (x *GetByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteByIdRequest) Reset() {
	*x = DeleteByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByIdRequest) ProtoMessage() {}

func (x *DeleteByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteByIdRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsAffected int64 `protobuf:"varint,1,opt,name=rowsAffected,proto3" json:"rowsAffected,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type ListRoutineByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *CreateRoutineCategoryResponse `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Routine  []*CreateRoutineResponse       `protobuf:"bytes,2,rep,name=routine,proto3" json:"routine,omitempty"`
}

func (x *ListRoutineByCategory) Reset() {
	*x = ListRoutineByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutineByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutineByCategory) ProtoMessage() {}

func (x *ListRoutineByCategory) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutineByCategory.ProtoReflect.Descriptor instead.
func (*ListRoutineByCategory) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{3}
}

func (x *ListRoutineByCategory) GetCategory() *CreateRoutineCategoryResponse {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ListRoutineByCategory) GetRoutine() []*CreateRoutineResponse {
	if x != nil {
		return x.Routine
	}
	return nil
}

type GetListRoutineByCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceTemplateId int64   `protobuf:"varint,1,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	Page              int64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage           int64   `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
	CategoryIds       []int64 `protobuf:"varint,4,rep,packed,name=categoryIds,proto3" json:"categoryIds,omitempty"`
	Ids               []int64 `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetListRoutineByCategoryRequest) Reset() {
	*x = GetListRoutineByCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineByCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineByCategoryRequest) ProtoMessage() {}

func (x *GetListRoutineByCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineByCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetListRoutineByCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{4}
}

func (x *GetListRoutineByCategoryRequest) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *GetListRoutineByCategoryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRoutineByCategoryRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListRoutineByCategoryRequest) GetCategoryIds() []int64 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *GetListRoutineByCategoryRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetListRoutineByCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListRoutineByCategoryResponse []*ListRoutineByCategory `protobuf:"bytes,1,rep,name=getListRoutineByCategoryResponse,proto3" json:"getListRoutineByCategoryResponse,omitempty"`
}

func (x *GetListRoutineByCategoryResponse) Reset() {
	*x = GetListRoutineByCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineByCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineByCategoryResponse) ProtoMessage() {}

func (x *GetListRoutineByCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineByCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetListRoutineByCategoryResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{5}
}

func (x *GetListRoutineByCategoryResponse) GetGetListRoutineByCategoryResponse() []*ListRoutineByCategory {
	if x != nil {
		return x.GetListRoutineByCategoryResponse
	}
	return nil
}

type CreateRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Detail        string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	AnimationFile string `protobuf:"bytes,3,opt,name=animationFile,proto3" json:"animationFile,omitempty"`
	ImageFile     string `protobuf:"bytes,9,opt,name=imageFile,proto3" json:"imageFile,omitempty"`
	SoundFile     string `protobuf:"bytes,6,opt,name=soundFile,proto3" json:"soundFile,omitempty"`
	StartDate     string `protobuf:"bytes,7,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       string `protobuf:"bytes,8,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CategoryId    int64  `protobuf:"varint,11,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Gender        int64  `protobuf:"varint,14,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *CreateRoutineRequest) Reset() {
	*x = CreateRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineRequest) ProtoMessage() {}

func (x *CreateRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineRequest.ProtoReflect.Descriptor instead.
func (*CreateRoutineRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRoutineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateRoutineRequest) GetAnimationFile() string {
	if x != nil {
		return x.AnimationFile
	}
	return ""
}

func (x *CreateRoutineRequest) GetImageFile() string {
	if x != nil {
		return x.ImageFile
	}
	return ""
}

func (x *CreateRoutineRequest) GetSoundFile() string {
	if x != nil {
		return x.SoundFile
	}
	return ""
}

func (x *CreateRoutineRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateRoutineRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateRoutineRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateRoutineRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type CreateRoutineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail        string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	AnimationFile string `protobuf:"bytes,4,opt,name=animationFile,proto3" json:"animationFile,omitempty"`
	ImageFile     string `protobuf:"bytes,5,opt,name=imageFile,proto3" json:"imageFile,omitempty"`
	SoundFile     string `protobuf:"bytes,6,opt,name=soundFile,proto3" json:"soundFile,omitempty"`
	StartDate     string `protobuf:"bytes,7,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       string `protobuf:"bytes,8,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CategoryId    int64  `protobuf:"varint,9,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Gender        int64  `protobuf:"varint,11,opt,name=gender,proto3" json:"gender,omitempty"`
	CreatedAt     string `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     string `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateRoutineResponse) Reset() {
	*x = CreateRoutineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineResponse) ProtoMessage() {}

func (x *CreateRoutineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineResponse.ProtoReflect.Descriptor instead.
func (*CreateRoutineResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRoutineResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateRoutineResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateRoutineResponse) GetAnimationFile() string {
	if x != nil {
		return x.AnimationFile
	}
	return ""
}

func (x *CreateRoutineResponse) GetImageFile() string {
	if x != nil {
		return x.ImageFile
	}
	return ""
}

func (x *CreateRoutineResponse) GetSoundFile() string {
	if x != nil {
		return x.SoundFile
	}
	return ""
}

func (x *CreateRoutineResponse) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateRoutineResponse) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateRoutineResponse) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateRoutineResponse) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CreateRoutineResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateRoutineResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage    int64   `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	CategoryId int64   `protobuf:"varint,4,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Gender     int64   `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Ids        []int64 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetListRoutineRequest) Reset() {
	*x = GetListRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineRequest) ProtoMessage() {}

func (x *GetListRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineRequest.ProtoReflect.Descriptor instead.
func (*GetListRoutineRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{8}
}

func (x *GetListRoutineRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRoutineRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListRoutineRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetListRoutineRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetListRoutineRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetListRoutineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListRoutine []*CreateRoutineResponse `protobuf:"bytes,1,rep,name=ListRoutine,proto3" json:"ListRoutine,omitempty"`
}

func (x *GetListRoutineResponse) Reset() {
	*x = GetListRoutineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineResponse) ProtoMessage() {}

func (x *GetListRoutineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineResponse.ProtoReflect.Descriptor instead.
func (*GetListRoutineResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{9}
}

func (x *GetListRoutineResponse) GetListRoutine() []*CreateRoutineResponse {
	if x != nil {
		return x.ListRoutine
	}
	return nil
}

type UpdateRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail        string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	AnimationFile string `protobuf:"bytes,4,opt,name=animationFile,proto3" json:"animationFile,omitempty"`
	ImageFile     string `protobuf:"bytes,5,opt,name=imageFile,proto3" json:"imageFile,omitempty"`
	SoundFile     string `protobuf:"bytes,6,opt,name=soundFile,proto3" json:"soundFile,omitempty"`
	StartDate     string `protobuf:"bytes,7,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       string `protobuf:"bytes,8,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CategoryId    int64  `protobuf:"varint,9,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Gender        int64  `protobuf:"varint,11,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *UpdateRoutineRequest) Reset() {
	*x = UpdateRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoutineRequest) ProtoMessage() {}

func (x *UpdateRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoutineRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoutineRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRoutineRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoutineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoutineRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *UpdateRoutineRequest) GetAnimationFile() string {
	if x != nil {
		return x.AnimationFile
	}
	return ""
}

func (x *UpdateRoutineRequest) GetImageFile() string {
	if x != nil {
		return x.ImageFile
	}
	return ""
}

func (x *UpdateRoutineRequest) GetSoundFile() string {
	if x != nil {
		return x.SoundFile
	}
	return ""
}

func (x *UpdateRoutineRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdateRoutineRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UpdateRoutineRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *UpdateRoutineRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type CreateServiceTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Detail                  string   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	CorporationId           int64    `protobuf:"varint,3,opt,name=corporationId,proto3" json:"corporationId,omitempty"`
	MaleRoutineIds          []int64  `protobuf:"varint,4,rep,packed,name=maleRoutineIds,proto3" json:"maleRoutineIds,omitempty"`
	DefaultMaleRoutineIds   []int64  `protobuf:"varint,5,rep,packed,name=defaultMaleRoutineIds,proto3" json:"defaultMaleRoutineIds,omitempty"`
	FemaleRoutineIds        []int64  `protobuf:"varint,7,rep,packed,name=femaleRoutineIds,proto3" json:"femaleRoutineIds,omitempty"`
	DefaultFemaleRoutineIds []int64  `protobuf:"varint,8,rep,packed,name=defaultFemaleRoutineIds,proto3" json:"defaultFemaleRoutineIds,omitempty"`
	DefaultMaleAvatarId     int64    `protobuf:"varint,10,opt,name=defaultMaleAvatarId,proto3" json:"defaultMaleAvatarId,omitempty"`
	DefaultFemaleAvatarId   int64    `protobuf:"varint,11,opt,name=defaultFemaleAvatarId,proto3" json:"defaultFemaleAvatarId,omitempty"`
	AvatarIds               []int64  `protobuf:"varint,12,rep,packed,name=avatarIds,proto3" json:"avatarIds,omitempty"`
	CreatedBy               int64    `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ServiceTemplateCategory int64    `protobuf:"varint,14,opt,name=serviceTemplateCategory,proto3" json:"serviceTemplateCategory,omitempty"`
	Backgrounds             []string `protobuf:"bytes,15,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	DefaultBackground       string   `protobuf:"bytes,16,opt,name=defaultBackground,proto3" json:"defaultBackground,omitempty"`
}

func (x *CreateServiceTemplateRequest) Reset() {
	*x = CreateServiceTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceTemplateRequest) ProtoMessage() {}

func (x *CreateServiceTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceTemplateRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{11}
}

func (x *CreateServiceTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceTemplateRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateServiceTemplateRequest) GetCorporationId() int64 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *CreateServiceTemplateRequest) GetMaleRoutineIds() []int64 {
	if x != nil {
		return x.MaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateRequest) GetDefaultMaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultMaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateRequest) GetFemaleRoutineIds() []int64 {
	if x != nil {
		return x.FemaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateRequest) GetDefaultFemaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultFemaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateRequest) GetDefaultMaleAvatarId() int64 {
	if x != nil {
		return x.DefaultMaleAvatarId
	}
	return 0
}

func (x *CreateServiceTemplateRequest) GetDefaultFemaleAvatarId() int64 {
	if x != nil {
		return x.DefaultFemaleAvatarId
	}
	return 0
}

func (x *CreateServiceTemplateRequest) GetAvatarIds() []int64 {
	if x != nil {
		return x.AvatarIds
	}
	return nil
}

func (x *CreateServiceTemplateRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *CreateServiceTemplateRequest) GetServiceTemplateCategory() int64 {
	if x != nil {
		return x.ServiceTemplateCategory
	}
	return 0
}

func (x *CreateServiceTemplateRequest) GetBackgrounds() []string {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *CreateServiceTemplateRequest) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

type CreateServiceTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail                  string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	CorporationId           int64    `protobuf:"varint,4,opt,name=corporationId,proto3" json:"corporationId,omitempty"`
	MaleRoutineIds          []int64  `protobuf:"varint,5,rep,packed,name=maleRoutineIds,proto3" json:"maleRoutineIds,omitempty"`
	DefaultMaleRoutineIds   []int64  `protobuf:"varint,6,rep,packed,name=defaultMaleRoutineIds,proto3" json:"defaultMaleRoutineIds,omitempty"`
	FemaleRoutineIds        []int64  `protobuf:"varint,8,rep,packed,name=femaleRoutineIds,proto3" json:"femaleRoutineIds,omitempty"`
	DefaultFemaleRoutineIds []int64  `protobuf:"varint,9,rep,packed,name=defaultFemaleRoutineIds,proto3" json:"defaultFemaleRoutineIds,omitempty"`
	DefaultMaleAvatarId     int64    `protobuf:"varint,10,opt,name=defaultMaleAvatarId,proto3" json:"defaultMaleAvatarId,omitempty"`
	DefaultFemaleAvatarId   int64    `protobuf:"varint,11,opt,name=defaultFemaleAvatarId,proto3" json:"defaultFemaleAvatarId,omitempty"`
	AvatarIds               []int64  `protobuf:"varint,12,rep,packed,name=avatarIds,proto3" json:"avatarIds,omitempty"`
	CreatedBy               int64    `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ServiceTemplateCategory int64    `protobuf:"varint,14,opt,name=serviceTemplateCategory,proto3" json:"serviceTemplateCategory,omitempty"`
	Backgrounds             []string `protobuf:"bytes,15,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	DefaultBackground       string   `protobuf:"bytes,16,opt,name=defaultBackground,proto3" json:"defaultBackground,omitempty"`
	CreatedAt               string   `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt               string   `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateServiceTemplateResponse) Reset() {
	*x = CreateServiceTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceTemplateResponse) ProtoMessage() {}

func (x *CreateServiceTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceTemplateResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{12}
}

func (x *CreateServiceTemplateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateServiceTemplateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceTemplateResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateServiceTemplateResponse) GetCorporationId() int64 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *CreateServiceTemplateResponse) GetMaleRoutineIds() []int64 {
	if x != nil {
		return x.MaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateResponse) GetDefaultMaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultMaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateResponse) GetFemaleRoutineIds() []int64 {
	if x != nil {
		return x.FemaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateResponse) GetDefaultFemaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultFemaleRoutineIds
	}
	return nil
}

func (x *CreateServiceTemplateResponse) GetDefaultMaleAvatarId() int64 {
	if x != nil {
		return x.DefaultMaleAvatarId
	}
	return 0
}

func (x *CreateServiceTemplateResponse) GetDefaultFemaleAvatarId() int64 {
	if x != nil {
		return x.DefaultFemaleAvatarId
	}
	return 0
}

func (x *CreateServiceTemplateResponse) GetAvatarIds() []int64 {
	if x != nil {
		return x.AvatarIds
	}
	return nil
}

func (x *CreateServiceTemplateResponse) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *CreateServiceTemplateResponse) GetServiceTemplateCategory() int64 {
	if x != nil {
		return x.ServiceTemplateCategory
	}
	return 0
}

func (x *CreateServiceTemplateResponse) GetBackgrounds() []string {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *CreateServiceTemplateResponse) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

func (x *CreateServiceTemplateResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateServiceTemplateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListServiceTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorporationId             int64 `protobuf:"varint,1,opt,name=corporationId,proto3" json:"corporationId,omitempty"`
	Page                      int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage                   int64 `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
	ServiceTemplateCategoryId int64 `protobuf:"varint,12,opt,name=serviceTemplateCategoryId,proto3" json:"serviceTemplateCategoryId,omitempty"`
}

func (x *GetListServiceTemplateRequest) Reset() {
	*x = GetListServiceTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListServiceTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListServiceTemplateRequest) ProtoMessage() {}

func (x *GetListServiceTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListServiceTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetListServiceTemplateRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{13}
}

func (x *GetListServiceTemplateRequest) GetCorporationId() int64 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *GetListServiceTemplateRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListServiceTemplateRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListServiceTemplateRequest) GetServiceTemplateCategoryId() int64 {
	if x != nil {
		return x.ServiceTemplateCategoryId
	}
	return 0
}

type GetListServiceTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListServiceTemplate []*CreateServiceTemplateResponse `protobuf:"bytes,1,rep,name=ListServiceTemplate,proto3" json:"ListServiceTemplate,omitempty"`
}

func (x *GetListServiceTemplateResponse) Reset() {
	*x = GetListServiceTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListServiceTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListServiceTemplateResponse) ProtoMessage() {}

func (x *GetListServiceTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListServiceTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetListServiceTemplateResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{14}
}

func (x *GetListServiceTemplateResponse) GetListServiceTemplate() []*CreateServiceTemplateResponse {
	if x != nil {
		return x.ListServiceTemplate
	}
	return nil
}

type UpdateServiceTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail                  string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	CorporationId           int64    `protobuf:"varint,4,opt,name=corporationId,proto3" json:"corporationId,omitempty"`
	MaleRoutineIds          []int64  `protobuf:"varint,5,rep,packed,name=maleRoutineIds,proto3" json:"maleRoutineIds,omitempty"`
	DefaultMaleRoutineIds   []int64  `protobuf:"varint,6,rep,packed,name=defaultMaleRoutineIds,proto3" json:"defaultMaleRoutineIds,omitempty"`
	FemaleRoutineIds        []int64  `protobuf:"varint,8,rep,packed,name=femaleRoutineIds,proto3" json:"femaleRoutineIds,omitempty"`
	DefaultFemaleRoutineIds []int64  `protobuf:"varint,9,rep,packed,name=defaultFemaleRoutineIds,proto3" json:"defaultFemaleRoutineIds,omitempty"`
	DefaultMaleAvatarId     int64    `protobuf:"varint,10,opt,name=defaultMaleAvatarId,proto3" json:"defaultMaleAvatarId,omitempty"`
	DefaultFemaleAvatarId   int64    `protobuf:"varint,11,opt,name=defaultFemaleAvatarId,proto3" json:"defaultFemaleAvatarId,omitempty"`
	AvatarIds               []int64  `protobuf:"varint,12,rep,packed,name=avatarIds,proto3" json:"avatarIds,omitempty"`
	CreatedBy               int64    `protobuf:"varint,13,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ServiceTemplateCategory int64    `protobuf:"varint,14,opt,name=serviceTemplateCategory,proto3" json:"serviceTemplateCategory,omitempty"`
	Backgrounds             []string `protobuf:"bytes,15,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	DefaultBackground       string   `protobuf:"bytes,16,opt,name=defaultBackground,proto3" json:"defaultBackground,omitempty"`
}

func (x *UpdateServiceTemplateRequest) Reset() {
	*x = UpdateServiceTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceTemplateRequest) ProtoMessage() {}

func (x *UpdateServiceTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceTemplateRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateServiceTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateServiceTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateServiceTemplateRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *UpdateServiceTemplateRequest) GetCorporationId() int64 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *UpdateServiceTemplateRequest) GetMaleRoutineIds() []int64 {
	if x != nil {
		return x.MaleRoutineIds
	}
	return nil
}

func (x *UpdateServiceTemplateRequest) GetDefaultMaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultMaleRoutineIds
	}
	return nil
}

func (x *UpdateServiceTemplateRequest) GetFemaleRoutineIds() []int64 {
	if x != nil {
		return x.FemaleRoutineIds
	}
	return nil
}

func (x *UpdateServiceTemplateRequest) GetDefaultFemaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultFemaleRoutineIds
	}
	return nil
}

func (x *UpdateServiceTemplateRequest) GetDefaultMaleAvatarId() int64 {
	if x != nil {
		return x.DefaultMaleAvatarId
	}
	return 0
}

func (x *UpdateServiceTemplateRequest) GetDefaultFemaleAvatarId() int64 {
	if x != nil {
		return x.DefaultFemaleAvatarId
	}
	return 0
}

func (x *UpdateServiceTemplateRequest) GetAvatarIds() []int64 {
	if x != nil {
		return x.AvatarIds
	}
	return nil
}

func (x *UpdateServiceTemplateRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UpdateServiceTemplateRequest) GetServiceTemplateCategory() int64 {
	if x != nil {
		return x.ServiceTemplateCategory
	}
	return 0
}

func (x *UpdateServiceTemplateRequest) GetBackgrounds() []string {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *UpdateServiceTemplateRequest) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

type GetListAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gender  int64   `protobuf:"varint,1,opt,name=gender,proto3" json:"gender,omitempty"`
	Page    int64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int64   `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Ids     []int64 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetListAvatarRequest) Reset() {
	*x = GetListAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAvatarRequest) ProtoMessage() {}

func (x *GetListAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAvatarRequest.ProtoReflect.Descriptor instead.
func (*GetListAvatarRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{16}
}

func (x *GetListAvatarRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetListAvatarRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListAvatarRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListAvatarRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetListAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatars []*CreateAvatarResponse `protobuf:"bytes,1,rep,name=avatars,proto3" json:"avatars,omitempty"`
}

func (x *GetListAvatarResponse) Reset() {
	*x = GetListAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAvatarResponse) ProtoMessage() {}

func (x *GetListAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAvatarResponse.ProtoReflect.Descriptor instead.
func (*GetListAvatarResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{17}
}

func (x *GetListAvatarResponse) GetAvatars() []*CreateAvatarResponse {
	if x != nil {
		return x.Avatars
	}
	return nil
}

type CreateAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail    string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	Image     string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Vrm       string `protobuf:"bytes,5,opt,name=vrm,proto3" json:"vrm,omitempty"`
	StartDate string `protobuf:"bytes,6,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   string `protobuf:"bytes,7,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Gender    int64  `protobuf:"varint,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Version   string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	Exporter  string `protobuf:"bytes,10,opt,name=exporter,proto3" json:"exporter,omitempty"`
}

func (x *CreateAvatarRequest) Reset() {
	*x = CreateAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAvatarRequest) ProtoMessage() {}

func (x *CreateAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAvatarRequest.ProtoReflect.Descriptor instead.
func (*CreateAvatarRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{18}
}

func (x *CreateAvatarRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateAvatarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAvatarRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateAvatarRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateAvatarRequest) GetVrm() string {
	if x != nil {
		return x.Vrm
	}
	return ""
}

func (x *CreateAvatarRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateAvatarRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateAvatarRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CreateAvatarRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateAvatarRequest) GetExporter() string {
	if x != nil {
		return x.Exporter
	}
	return ""
}

type CreateAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail    string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	Image     string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Vrm       string `protobuf:"bytes,5,opt,name=vrm,proto3" json:"vrm,omitempty"`
	StartDate string `protobuf:"bytes,6,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   string `protobuf:"bytes,7,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Gender    int64  `protobuf:"varint,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Version   string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	Exporter  string `protobuf:"bytes,10,opt,name=exporter,proto3" json:"exporter,omitempty"`
	CreatedAt string `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateAvatarResponse) Reset() {
	*x = CreateAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAvatarResponse) ProtoMessage() {}

func (x *CreateAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAvatarResponse.ProtoReflect.Descriptor instead.
func (*CreateAvatarResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{19}
}

func (x *CreateAvatarResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateAvatarResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAvatarResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateAvatarResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateAvatarResponse) GetVrm() string {
	if x != nil {
		return x.Vrm
	}
	return ""
}

func (x *CreateAvatarResponse) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateAvatarResponse) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateAvatarResponse) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CreateAvatarResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateAvatarResponse) GetExporter() string {
	if x != nil {
		return x.Exporter
	}
	return ""
}

func (x *CreateAvatarResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateAvatarResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateRoutineCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateRoutineCategoryRequest) Reset() {
	*x = CreateRoutineCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineCategoryRequest) ProtoMessage() {}

func (x *CreateRoutineCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateRoutineCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{20}
}

func (x *CreateRoutineCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateRoutineCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateRoutineCategoryResponse) Reset() {
	*x = CreateRoutineCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineCategoryResponse) ProtoMessage() {}

func (x *CreateRoutineCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateRoutineCategoryResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{21}
}

func (x *CreateRoutineCategoryResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateRoutineCategoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineCategoryResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateRoutineCategoryResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListRoutineCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int64 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *GetListRoutineCategoryRequest) Reset() {
	*x = GetListRoutineCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineCategoryRequest) ProtoMessage() {}

func (x *GetListRoutineCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetListRoutineCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{22}
}

func (x *GetListRoutineCategoryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRoutineCategoryRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type GetListRoutineCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListRoutineCategoryResponse []*CreateRoutineResponse `protobuf:"bytes,1,rep,name=GetListRoutineCategoryResponse,proto3" json:"GetListRoutineCategoryResponse,omitempty"`
}

func (x *GetListRoutineCategoryResponse) Reset() {
	*x = GetListRoutineCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineCategoryResponse) ProtoMessage() {}

func (x *GetListRoutineCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetListRoutineCategoryResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{23}
}

func (x *GetListRoutineCategoryResponse) GetGetListRoutineCategoryResponse() []*CreateRoutineResponse {
	if x != nil {
		return x.GetListRoutineCategoryResponse
	}
	return nil
}

type UpdateRoutineCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateRoutineCategoryRequest) Reset() {
	*x = UpdateRoutineCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoutineCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoutineCategoryRequest) ProtoMessage() {}

func (x *UpdateRoutineCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoutineCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoutineCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateRoutineCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoutineCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateServiceTemplateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateServiceTemplateCategoryRequest) Reset() {
	*x = CreateServiceTemplateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceTemplateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceTemplateCategoryRequest) ProtoMessage() {}

func (x *CreateServiceTemplateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceTemplateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceTemplateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{25}
}

func (x *CreateServiceTemplateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateServiceTemplateCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateServiceTemplateCategoryResponse) Reset() {
	*x = CreateServiceTemplateCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceTemplateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceTemplateCategoryResponse) ProtoMessage() {}

func (x *CreateServiceTemplateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceTemplateCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceTemplateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{26}
}

func (x *CreateServiceTemplateCategoryResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateServiceTemplateCategoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceTemplateCategoryResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateServiceTemplateCategoryResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListServiceTemplateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int64 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *GetListServiceTemplateCategoryRequest) Reset() {
	*x = GetListServiceTemplateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListServiceTemplateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListServiceTemplateCategoryRequest) ProtoMessage() {}

func (x *GetListServiceTemplateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListServiceTemplateCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetListServiceTemplateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{27}
}

func (x *GetListServiceTemplateCategoryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListServiceTemplateCategoryRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type GetListServiceTemplateCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListServiceTemplateCategoryResponse []*CreateServiceTemplateCategoryResponse `protobuf:"bytes,1,rep,name=GetListServiceTemplateCategoryResponse,proto3" json:"GetListServiceTemplateCategoryResponse,omitempty"`
}

func (x *GetListServiceTemplateCategoryResponse) Reset() {
	*x = GetListServiceTemplateCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListServiceTemplateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListServiceTemplateCategoryResponse) ProtoMessage() {}

func (x *GetListServiceTemplateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListServiceTemplateCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetListServiceTemplateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{28}
}

func (x *GetListServiceTemplateCategoryResponse) GetGetListServiceTemplateCategoryResponse() []*CreateServiceTemplateCategoryResponse {
	if x != nil {
		return x.GetListServiceTemplateCategoryResponse
	}
	return nil
}

type UpdateServiceTemplateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateServiceTemplateCategoryRequest) Reset() {
	*x = UpdateServiceTemplateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_center_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceTemplateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceTemplateCategoryRequest) ProtoMessage() {}

func (x *UpdateServiceTemplateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_center_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceTemplateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceTemplateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_center_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateServiceTemplateCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateServiceTemplateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_center_proto protoreflect.FileDescriptor

var file_center_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x41, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x37, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x8d, 0x01,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x20, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x20, 0x67, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x02,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x22, 0xe1, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x59, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xe2, 0x04, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d,
	0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x17, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61,
	0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d,
	0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0xaf, 0x05, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x6d,
	0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a,
	0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x66,
	0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x38, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d,
	0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x22, 0xf2, 0x04, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x6d,
	0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a,
	0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x66,
	0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x38, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d,
	0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x6e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x22, 0xbc, 0x02, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x32, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4d,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x24, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x55, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x26, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x24, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xee, 0x12, 0x0a, 0x06, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x12, 0x16, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42,
	0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x24, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x2d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_center_proto_rawDescOnce sync.Once
	file_center_proto_rawDescData = file_center_proto_rawDesc
)

func file_center_proto_rawDescGZIP() []byte {
	file_center_proto_rawDescOnce.Do(func() {
		file_center_proto_rawDescData = protoimpl.X.CompressGZIP(file_center_proto_rawDescData)
	})
	return file_center_proto_rawDescData
}

var file_center_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_center_proto_goTypes = []interface{}{
	(*GetByIdRequest)(nil),                         // 0: center.GetByIdRequest
	(*DeleteByIdRequest)(nil),                      // 1: center.DeleteByIdRequest
	(*DeleteResponse)(nil),                         // 2: center.DeleteResponse
	(*ListRoutineByCategory)(nil),                  // 3: center.ListRoutineByCategory
	(*GetListRoutineByCategoryRequest)(nil),        // 4: center.GetListRoutineByCategoryRequest
	(*GetListRoutineByCategoryResponse)(nil),       // 5: center.GetListRoutineByCategoryResponse
	(*CreateRoutineRequest)(nil),                   // 6: center.CreateRoutineRequest
	(*CreateRoutineResponse)(nil),                  // 7: center.CreateRoutineResponse
	(*GetListRoutineRequest)(nil),                  // 8: center.GetListRoutineRequest
	(*GetListRoutineResponse)(nil),                 // 9: center.GetListRoutineResponse
	(*UpdateRoutineRequest)(nil),                   // 10: center.UpdateRoutineRequest
	(*CreateServiceTemplateRequest)(nil),           // 11: center.CreateServiceTemplateRequest
	(*CreateServiceTemplateResponse)(nil),          // 12: center.CreateServiceTemplateResponse
	(*GetListServiceTemplateRequest)(nil),          // 13: center.GetListServiceTemplateRequest
	(*GetListServiceTemplateResponse)(nil),         // 14: center.GetListServiceTemplateResponse
	(*UpdateServiceTemplateRequest)(nil),           // 15: center.UpdateServiceTemplateRequest
	(*GetListAvatarRequest)(nil),                   // 16: center.GetListAvatarRequest
	(*GetListAvatarResponse)(nil),                  // 17: center.GetListAvatarResponse
	(*CreateAvatarRequest)(nil),                    // 18: center.CreateAvatarRequest
	(*CreateAvatarResponse)(nil),                   // 19: center.CreateAvatarResponse
	(*CreateRoutineCategoryRequest)(nil),           // 20: center.CreateRoutineCategoryRequest
	(*CreateRoutineCategoryResponse)(nil),          // 21: center.CreateRoutineCategoryResponse
	(*GetListRoutineCategoryRequest)(nil),          // 22: center.GetListRoutineCategoryRequest
	(*GetListRoutineCategoryResponse)(nil),         // 23: center.GetListRoutineCategoryResponse
	(*UpdateRoutineCategoryRequest)(nil),           // 24: center.UpdateRoutineCategoryRequest
	(*CreateServiceTemplateCategoryRequest)(nil),   // 25: center.CreateServiceTemplateCategoryRequest
	(*CreateServiceTemplateCategoryResponse)(nil),  // 26: center.CreateServiceTemplateCategoryResponse
	(*GetListServiceTemplateCategoryRequest)(nil),  // 27: center.GetListServiceTemplateCategoryRequest
	(*GetListServiceTemplateCategoryResponse)(nil), // 28: center.GetListServiceTemplateCategoryResponse
	(*UpdateServiceTemplateCategoryRequest)(nil),   // 29: center.UpdateServiceTemplateCategoryRequest
}
var file_center_proto_depIdxs = []int32{
	21, // 0: center.ListRoutineByCategory.category:type_name -> center.CreateRoutineCategoryResponse
	7,  // 1: center.ListRoutineByCategory.routine:type_name -> center.CreateRoutineResponse
	3,  // 2: center.GetListRoutineByCategoryResponse.getListRoutineByCategoryResponse:type_name -> center.ListRoutineByCategory
	7,  // 3: center.GetListRoutineResponse.ListRoutine:type_name -> center.CreateRoutineResponse
	12, // 4: center.GetListServiceTemplateResponse.ListServiceTemplate:type_name -> center.CreateServiceTemplateResponse
	19, // 5: center.GetListAvatarResponse.avatars:type_name -> center.CreateAvatarResponse
	7,  // 6: center.GetListRoutineCategoryResponse.GetListRoutineCategoryResponse:type_name -> center.CreateRoutineResponse
	26, // 7: center.GetListServiceTemplateCategoryResponse.GetListServiceTemplateCategoryResponse:type_name -> center.CreateServiceTemplateCategoryResponse
	6,  // 8: center.Center.CreateRoutine:input_type -> center.CreateRoutineRequest
	0,  // 9: center.Center.GetRoutine:input_type -> center.GetByIdRequest
	8,  // 10: center.Center.GetListRoutine:input_type -> center.GetListRoutineRequest
	10, // 11: center.Center.UpdateRoutine:input_type -> center.UpdateRoutineRequest
	1,  // 12: center.Center.DeleteRoutine:input_type -> center.DeleteByIdRequest
	4,  // 13: center.Center.GetListRoutineByCategory:input_type -> center.GetListRoutineByCategoryRequest
	18, // 14: center.Center.CreateAvatar:input_type -> center.CreateAvatarRequest
	0,  // 15: center.Center.GetAvatar:input_type -> center.GetByIdRequest
	16, // 16: center.Center.GetListAvatar:input_type -> center.GetListAvatarRequest
	18, // 17: center.Center.UpdateAvatar:input_type -> center.CreateAvatarRequest
	1,  // 18: center.Center.DeleteAvatar:input_type -> center.DeleteByIdRequest
	20, // 19: center.Center.CreateRoutineCategory:input_type -> center.CreateRoutineCategoryRequest
	0,  // 20: center.Center.GetRoutineCategory:input_type -> center.GetByIdRequest
	22, // 21: center.Center.GetListRoutineCategory:input_type -> center.GetListRoutineCategoryRequest
	24, // 22: center.Center.UpdateRoutineCategory:input_type -> center.UpdateRoutineCategoryRequest
	1,  // 23: center.Center.DeleteRoutineCategory:input_type -> center.DeleteByIdRequest
	11, // 24: center.Center.CreateServiceTemplate:input_type -> center.CreateServiceTemplateRequest
	0,  // 25: center.Center.GetServiceTemplate:input_type -> center.GetByIdRequest
	13, // 26: center.Center.GetListServiceTemplate:input_type -> center.GetListServiceTemplateRequest
	15, // 27: center.Center.UpdateServiceTemplate:input_type -> center.UpdateServiceTemplateRequest
	1,  // 28: center.Center.DeleteServiceTemplate:input_type -> center.DeleteByIdRequest
	25, // 29: center.Center.CreateServiceTemplateCategory:input_type -> center.CreateServiceTemplateCategoryRequest
	0,  // 30: center.Center.GetServiceTemplateCategory:input_type -> center.GetByIdRequest
	27, // 31: center.Center.GetListServiceTemplateCategory:input_type -> center.GetListServiceTemplateCategoryRequest
	29, // 32: center.Center.UpdateServiceTemplateCategory:input_type -> center.UpdateServiceTemplateCategoryRequest
	1,  // 33: center.Center.DeleteServiceTemplateCategory:input_type -> center.DeleteByIdRequest
	7,  // 34: center.Center.CreateRoutine:output_type -> center.CreateRoutineResponse
	7,  // 35: center.Center.GetRoutine:output_type -> center.CreateRoutineResponse
	9,  // 36: center.Center.GetListRoutine:output_type -> center.GetListRoutineResponse
	7,  // 37: center.Center.UpdateRoutine:output_type -> center.CreateRoutineResponse
	2,  // 38: center.Center.DeleteRoutine:output_type -> center.DeleteResponse
	5,  // 39: center.Center.GetListRoutineByCategory:output_type -> center.GetListRoutineByCategoryResponse
	19, // 40: center.Center.CreateAvatar:output_type -> center.CreateAvatarResponse
	19, // 41: center.Center.GetAvatar:output_type -> center.CreateAvatarResponse
	17, // 42: center.Center.GetListAvatar:output_type -> center.GetListAvatarResponse
	19, // 43: center.Center.UpdateAvatar:output_type -> center.CreateAvatarResponse
	2,  // 44: center.Center.DeleteAvatar:output_type -> center.DeleteResponse
	21, // 45: center.Center.CreateRoutineCategory:output_type -> center.CreateRoutineCategoryResponse
	21, // 46: center.Center.GetRoutineCategory:output_type -> center.CreateRoutineCategoryResponse
	23, // 47: center.Center.GetListRoutineCategory:output_type -> center.GetListRoutineCategoryResponse
	21, // 48: center.Center.UpdateRoutineCategory:output_type -> center.CreateRoutineCategoryResponse
	2,  // 49: center.Center.DeleteRoutineCategory:output_type -> center.DeleteResponse
	12, // 50: center.Center.CreateServiceTemplate:output_type -> center.CreateServiceTemplateResponse
	12, // 51: center.Center.GetServiceTemplate:output_type -> center.CreateServiceTemplateResponse
	14, // 52: center.Center.GetListServiceTemplate:output_type -> center.GetListServiceTemplateResponse
	12, // 53: center.Center.UpdateServiceTemplate:output_type -> center.CreateServiceTemplateResponse
	2,  // 54: center.Center.DeleteServiceTemplate:output_type -> center.DeleteResponse
	26, // 55: center.Center.CreateServiceTemplateCategory:output_type -> center.CreateServiceTemplateCategoryResponse
	26, // 56: center.Center.GetServiceTemplateCategory:output_type -> center.CreateServiceTemplateCategoryResponse
	28, // 57: center.Center.GetListServiceTemplateCategory:output_type -> center.GetListServiceTemplateCategoryResponse
	26, // 58: center.Center.UpdateServiceTemplateCategory:output_type -> center.CreateServiceTemplateCategoryResponse
	2,  // 59: center.Center.DeleteServiceTemplateCategory:output_type -> center.DeleteResponse
	34, // [34:60] is the sub-list for method output_type
	8,  // [8:34] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_center_proto_init() }
func file_center_proto_init() {
	if File_center_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_center_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutineByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineByCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineByCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListServiceTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListServiceTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoutineCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceTemplateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceTemplateCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListServiceTemplateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListServiceTemplateCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_center_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceTemplateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_center_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_center_proto_goTypes,
		DependencyIndexes: file_center_proto_depIdxs,
		MessageInfos:      file_center_proto_msgTypes,
	}.Build()
	File_center_proto = out.File
	file_center_proto_rawDesc = nil
	file_center_proto_goTypes = nil
	file_center_proto_depIdxs = nil
}
