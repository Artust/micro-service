// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.6.1
// source: pos.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{0}
}

type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{1}
}

func (x *GetByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteByIdRequest) Reset() {
	*x = DeleteByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByIdRequest) ProtoMessage() {}

func (x *DeleteByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteByIdRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsAffected int64 `protobuf:"varint,1,opt,name=rowsAffected,proto3" json:"rowsAffected,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type TmpGetIPCameraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShinobiMonitorUrl string `protobuf:"bytes,1,opt,name=shinobiMonitorUrl,proto3" json:"shinobiMonitorUrl,omitempty"`
}

func (x *TmpGetIPCameraResponse) Reset() {
	*x = TmpGetIPCameraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmpGetIPCameraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmpGetIPCameraResponse) ProtoMessage() {}

func (x *TmpGetIPCameraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmpGetIPCameraResponse.ProtoReflect.Descriptor instead.
func (*TmpGetIPCameraResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{4}
}

func (x *TmpGetIPCameraResponse) GetShinobiMonitorUrl() string {
	if x != nil {
		return x.ShinobiMonitorUrl
	}
	return ""
}

type ListRoutineSortedByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *CreateRoutineCategoryResponse `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Routines []*CreateRoutineResponse       `protobuf:"bytes,2,rep,name=routines,proto3" json:"routines,omitempty"`
}

func (x *ListRoutineSortedByCategory) Reset() {
	*x = ListRoutineSortedByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutineSortedByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutineSortedByCategory) ProtoMessage() {}

func (x *ListRoutineSortedByCategory) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutineSortedByCategory.ProtoReflect.Descriptor instead.
func (*ListRoutineSortedByCategory) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{5}
}

func (x *ListRoutineSortedByCategory) GetCategory() *CreateRoutineCategoryResponse {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ListRoutineSortedByCategory) GetRoutines() []*CreateRoutineResponse {
	if x != nil {
		return x.Routines
	}
	return nil
}

type GetListRoutineByCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosId       int64   `protobuf:"varint,1,opt,name=posId,proto3" json:"posId,omitempty"`
	Page        int64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage     int64   `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
	CategoryIds []int64 `protobuf:"varint,4,rep,packed,name=categoryIds,proto3" json:"categoryIds,omitempty"`
	Ids         []int64 `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	EndDate     string  `protobuf:"bytes,6,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Between     int64   `protobuf:"varint,7,opt,name=between,proto3" json:"between,omitempty"`
}

func (x *GetListRoutineByCategoryRequest) Reset() {
	*x = GetListRoutineByCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineByCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineByCategoryRequest) ProtoMessage() {}

func (x *GetListRoutineByCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineByCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetListRoutineByCategoryRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{6}
}

func (x *GetListRoutineByCategoryRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *GetListRoutineByCategoryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRoutineByCategoryRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListRoutineByCategoryRequest) GetCategoryIds() []int64 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *GetListRoutineByCategoryRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetListRoutineByCategoryRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetListRoutineByCategoryRequest) GetBetween() int64 {
	if x != nil {
		return x.Between
	}
	return 0
}

type GetListRoutineByCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListRoutineSortedByCategoryResponse []*ListRoutineSortedByCategory `protobuf:"bytes,1,rep,name=getListRoutineSortedByCategoryResponse,proto3" json:"getListRoutineSortedByCategoryResponse,omitempty"`
}

func (x *GetListRoutineByCategoryResponse) Reset() {
	*x = GetListRoutineByCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineByCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineByCategoryResponse) ProtoMessage() {}

func (x *GetListRoutineByCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineByCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetListRoutineByCategoryResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{7}
}

func (x *GetListRoutineByCategoryResponse) GetGetListRoutineSortedByCategoryResponse() []*ListRoutineSortedByCategory {
	if x != nil {
		return x.GetListRoutineSortedByCategoryResponse
	}
	return nil
}

type CreatePosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServiceName             string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceCategory         string   `protobuf:"bytes,3,opt,name=serviceCategory,proto3" json:"serviceCategory,omitempty"`
	ServiceDetail           string   `protobuf:"bytes,4,opt,name=serviceDetail,proto3" json:"serviceDetail,omitempty"`
	ShopId                  int64    `protobuf:"varint,5,opt,name=shopId,proto3" json:"shopId,omitempty"`
	CenterId                int64    `protobuf:"varint,6,opt,name=centerId,proto3" json:"centerId,omitempty"`
	ServiceTemplateId       int64    `protobuf:"varint,7,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	MaleRoutineIds          []int64  `protobuf:"varint,8,rep,packed,name=maleRoutineIds,proto3" json:"maleRoutineIds,omitempty"`
	DefaultMaleRoutineIds   []int64  `protobuf:"varint,9,rep,packed,name=defaultMaleRoutineIds,proto3" json:"defaultMaleRoutineIds,omitempty"`
	FemaleRoutineIds        []int64  `protobuf:"varint,10,rep,packed,name=femaleRoutineIds,proto3" json:"femaleRoutineIds,omitempty"`
	DefaultFemaleRoutineIds []int64  `protobuf:"varint,11,rep,packed,name=defaultFemaleRoutineIds,proto3" json:"defaultFemaleRoutineIds,omitempty"`
	DefaultAvatarId         int64    `protobuf:"varint,12,opt,name=defaultAvatarId,proto3" json:"defaultAvatarId,omitempty"`
	CreatedBy               int64    `protobuf:"varint,14,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Active                  bool     `protobuf:"varint,15,opt,name=active,proto3" json:"active,omitempty"`
	UseServiceTemplate      bool     `protobuf:"varint,16,opt,name=useServiceTemplate,proto3" json:"useServiceTemplate,omitempty"`
	Backgrounds             []string `protobuf:"bytes,17,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	DefaultBackground       string   `protobuf:"bytes,18,opt,name=defaultBackground,proto3" json:"defaultBackground,omitempty"`
}

func (x *CreatePosRequest) Reset() {
	*x = CreatePosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePosRequest) ProtoMessage() {}

func (x *CreatePosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePosRequest.ProtoReflect.Descriptor instead.
func (*CreatePosRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePosRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePosRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CreatePosRequest) GetServiceCategory() string {
	if x != nil {
		return x.ServiceCategory
	}
	return ""
}

func (x *CreatePosRequest) GetServiceDetail() string {
	if x != nil {
		return x.ServiceDetail
	}
	return ""
}

func (x *CreatePosRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CreatePosRequest) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

func (x *CreatePosRequest) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *CreatePosRequest) GetMaleRoutineIds() []int64 {
	if x != nil {
		return x.MaleRoutineIds
	}
	return nil
}

func (x *CreatePosRequest) GetDefaultMaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultMaleRoutineIds
	}
	return nil
}

func (x *CreatePosRequest) GetFemaleRoutineIds() []int64 {
	if x != nil {
		return x.FemaleRoutineIds
	}
	return nil
}

func (x *CreatePosRequest) GetDefaultFemaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultFemaleRoutineIds
	}
	return nil
}

func (x *CreatePosRequest) GetDefaultAvatarId() int64 {
	if x != nil {
		return x.DefaultAvatarId
	}
	return 0
}

func (x *CreatePosRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *CreatePosRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CreatePosRequest) GetUseServiceTemplate() bool {
	if x != nil {
		return x.UseServiceTemplate
	}
	return false
}

func (x *CreatePosRequest) GetBackgrounds() []string {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *CreatePosRequest) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

type GetListPosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId   int64 `protobuf:"varint,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
	CenterId int64 `protobuf:"varint,2,opt,name=centerId,proto3" json:"centerId,omitempty"`
	Page     int64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage  int64 `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *GetListPosRequest) Reset() {
	*x = GetListPosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListPosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListPosRequest) ProtoMessage() {}

func (x *GetListPosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListPosRequest.ProtoReflect.Descriptor instead.
func (*GetListPosRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{9}
}

func (x *GetListPosRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *GetListPosRequest) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

func (x *GetListPosRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListPosRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type GetListPosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListPosResponse []*CreatePosResponse `protobuf:"bytes,1,rep,name=GetListPosResponse,proto3" json:"GetListPosResponse,omitempty"`
}

func (x *GetListPosResponse) Reset() {
	*x = GetListPosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListPosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListPosResponse) ProtoMessage() {}

func (x *GetListPosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListPosResponse.ProtoReflect.Descriptor instead.
func (*GetListPosResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{10}
}

func (x *GetListPosResponse) GetGetListPosResponse() []*CreatePosResponse {
	if x != nil {
		return x.GetListPosResponse
	}
	return nil
}

type CreatePosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServiceName             string   `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceCategory         string   `protobuf:"bytes,4,opt,name=serviceCategory,proto3" json:"serviceCategory,omitempty"`
	ServiceDetail           string   `protobuf:"bytes,5,opt,name=serviceDetail,proto3" json:"serviceDetail,omitempty"`
	ShopId                  int64    `protobuf:"varint,6,opt,name=shopId,proto3" json:"shopId,omitempty"`
	CenterId                int64    `protobuf:"varint,7,opt,name=centerId,proto3" json:"centerId,omitempty"`
	ServiceTemplateId       int64    `protobuf:"varint,8,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	MaleRoutineIds          []int64  `protobuf:"varint,9,rep,packed,name=maleRoutineIds,proto3" json:"maleRoutineIds,omitempty"`
	DefaultMaleRoutineIds   []int64  `protobuf:"varint,10,rep,packed,name=defaultMaleRoutineIds,proto3" json:"defaultMaleRoutineIds,omitempty"`
	FemaleRoutineIds        []int64  `protobuf:"varint,11,rep,packed,name=femaleRoutineIds,proto3" json:"femaleRoutineIds,omitempty"`
	DefaultFemaleRoutineIds []int64  `protobuf:"varint,12,rep,packed,name=defaultFemaleRoutineIds,proto3" json:"defaultFemaleRoutineIds,omitempty"`
	DefaultAvatarId         int64    `protobuf:"varint,13,opt,name=defaultAvatarId,proto3" json:"defaultAvatarId,omitempty"`
	CreatedBy               int64    `protobuf:"varint,15,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt               string   `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt               string   `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Active                  bool     `protobuf:"varint,18,opt,name=active,proto3" json:"active,omitempty"`
	UseServiceTemplate      bool     `protobuf:"varint,19,opt,name=useServiceTemplate,proto3" json:"useServiceTemplate,omitempty"`
	Backgrounds             []string `protobuf:"bytes,20,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	DefaultBackground       string   `protobuf:"bytes,21,opt,name=defaultBackground,proto3" json:"defaultBackground,omitempty"`
}

func (x *CreatePosResponse) Reset() {
	*x = CreatePosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePosResponse) ProtoMessage() {}

func (x *CreatePosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePosResponse.ProtoReflect.Descriptor instead.
func (*CreatePosResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePosResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreatePosResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePosResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CreatePosResponse) GetServiceCategory() string {
	if x != nil {
		return x.ServiceCategory
	}
	return ""
}

func (x *CreatePosResponse) GetServiceDetail() string {
	if x != nil {
		return x.ServiceDetail
	}
	return ""
}

func (x *CreatePosResponse) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CreatePosResponse) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

func (x *CreatePosResponse) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *CreatePosResponse) GetMaleRoutineIds() []int64 {
	if x != nil {
		return x.MaleRoutineIds
	}
	return nil
}

func (x *CreatePosResponse) GetDefaultMaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultMaleRoutineIds
	}
	return nil
}

func (x *CreatePosResponse) GetFemaleRoutineIds() []int64 {
	if x != nil {
		return x.FemaleRoutineIds
	}
	return nil
}

func (x *CreatePosResponse) GetDefaultFemaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultFemaleRoutineIds
	}
	return nil
}

func (x *CreatePosResponse) GetDefaultAvatarId() int64 {
	if x != nil {
		return x.DefaultAvatarId
	}
	return 0
}

func (x *CreatePosResponse) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *CreatePosResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreatePosResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CreatePosResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CreatePosResponse) GetUseServiceTemplate() bool {
	if x != nil {
		return x.UseServiceTemplate
	}
	return false
}

func (x *CreatePosResponse) GetBackgrounds() []string {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *CreatePosResponse) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

type UpdatePosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServiceName             string   `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceCategory         string   `protobuf:"bytes,4,opt,name=serviceCategory,proto3" json:"serviceCategory,omitempty"`
	ServiceDetail           string   `protobuf:"bytes,5,opt,name=serviceDetail,proto3" json:"serviceDetail,omitempty"`
	ShopId                  int64    `protobuf:"varint,6,opt,name=shopId,proto3" json:"shopId,omitempty"`
	CenterId                int64    `protobuf:"varint,7,opt,name=centerId,proto3" json:"centerId,omitempty"`
	ServiceTemplateId       int64    `protobuf:"varint,8,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	MaleRoutineIds          []int64  `protobuf:"varint,9,rep,packed,name=maleRoutineIds,proto3" json:"maleRoutineIds,omitempty"`
	DefaultMaleRoutineIds   []int64  `protobuf:"varint,10,rep,packed,name=defaultMaleRoutineIds,proto3" json:"defaultMaleRoutineIds,omitempty"`
	FemaleRoutineIds        []int64  `protobuf:"varint,11,rep,packed,name=femaleRoutineIds,proto3" json:"femaleRoutineIds,omitempty"`
	DefaultFemaleRoutineIds []int64  `protobuf:"varint,12,rep,packed,name=defaultFemaleRoutineIds,proto3" json:"defaultFemaleRoutineIds,omitempty"`
	DefaultAvatarId         int64    `protobuf:"varint,13,opt,name=defaultAvatarId,proto3" json:"defaultAvatarId,omitempty"`
	CreatedBy               int64    `protobuf:"varint,15,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Active                  bool     `protobuf:"varint,16,opt,name=active,proto3" json:"active,omitempty"`
	UseServiceTemplate      bool     `protobuf:"varint,17,opt,name=useServiceTemplate,proto3" json:"useServiceTemplate,omitempty"`
	Backgrounds             []string `protobuf:"bytes,18,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	DefaultBackground       string   `protobuf:"bytes,19,opt,name=defaultBackground,proto3" json:"defaultBackground,omitempty"`
}

func (x *UpdatePosRequest) Reset() {
	*x = UpdatePosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePosRequest) ProtoMessage() {}

func (x *UpdatePosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePosRequest.ProtoReflect.Descriptor instead.
func (*UpdatePosRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePosRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePosRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePosRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *UpdatePosRequest) GetServiceCategory() string {
	if x != nil {
		return x.ServiceCategory
	}
	return ""
}

func (x *UpdatePosRequest) GetServiceDetail() string {
	if x != nil {
		return x.ServiceDetail
	}
	return ""
}

func (x *UpdatePosRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *UpdatePosRequest) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

func (x *UpdatePosRequest) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *UpdatePosRequest) GetMaleRoutineIds() []int64 {
	if x != nil {
		return x.MaleRoutineIds
	}
	return nil
}

func (x *UpdatePosRequest) GetDefaultMaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultMaleRoutineIds
	}
	return nil
}

func (x *UpdatePosRequest) GetFemaleRoutineIds() []int64 {
	if x != nil {
		return x.FemaleRoutineIds
	}
	return nil
}

func (x *UpdatePosRequest) GetDefaultFemaleRoutineIds() []int64 {
	if x != nil {
		return x.DefaultFemaleRoutineIds
	}
	return nil
}

func (x *UpdatePosRequest) GetDefaultAvatarId() int64 {
	if x != nil {
		return x.DefaultAvatarId
	}
	return 0
}

func (x *UpdatePosRequest) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UpdatePosRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdatePosRequest) GetUseServiceTemplate() bool {
	if x != nil {
		return x.UseServiceTemplate
	}
	return false
}

func (x *UpdatePosRequest) GetBackgrounds() []string {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *UpdatePosRequest) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

type TriggerEventOperatorSideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event   string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *TriggerEventOperatorSideRequest) Reset() {
	*x = TriggerEventOperatorSideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerEventOperatorSideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerEventOperatorSideRequest) ProtoMessage() {}

func (x *TriggerEventOperatorSideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerEventOperatorSideRequest.ProtoReflect.Descriptor instead.
func (*TriggerEventOperatorSideRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{13}
}

func (x *TriggerEventOperatorSideRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *TriggerEventOperatorSideRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type TriggerEventOperatorSideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event   string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *TriggerEventOperatorSideResponse) Reset() {
	*x = TriggerEventOperatorSideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerEventOperatorSideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerEventOperatorSideResponse) ProtoMessage() {}

func (x *TriggerEventOperatorSideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerEventOperatorSideResponse.ProtoReflect.Descriptor instead.
func (*TriggerEventOperatorSideResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{14}
}

func (x *TriggerEventOperatorSideResponse) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *TriggerEventOperatorSideResponse) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type CreateManyRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routines []*CreateRoutineRequest `protobuf:"bytes,1,rep,name=routines,proto3" json:"routines,omitempty"`
}

func (x *CreateManyRoutineRequest) Reset() {
	*x = CreateManyRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManyRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManyRoutineRequest) ProtoMessage() {}

func (x *CreateManyRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManyRoutineRequest.ProtoReflect.Descriptor instead.
func (*CreateManyRoutineRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{15}
}

func (x *CreateManyRoutineRequest) GetRoutines() []*CreateRoutineRequest {
	if x != nil {
		return x.Routines
	}
	return nil
}

type CreateManyRoutineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routines []*CreateRoutineResponse `protobuf:"bytes,1,rep,name=routines,proto3" json:"routines,omitempty"`
}

func (x *CreateManyRoutineResponse) Reset() {
	*x = CreateManyRoutineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManyRoutineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManyRoutineResponse) ProtoMessage() {}

func (x *CreateManyRoutineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManyRoutineResponse.ProtoReflect.Descriptor instead.
func (*CreateManyRoutineResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{16}
}

func (x *CreateManyRoutineResponse) GetRoutines() []*CreateRoutineResponse {
	if x != nil {
		return x.Routines
	}
	return nil
}

type CreateRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Detail                   string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	AnimationFile            string `protobuf:"bytes,3,opt,name=animationFile,proto3" json:"animationFile,omitempty"`
	SoundFile                string `protobuf:"bytes,4,opt,name=soundFile,proto3" json:"soundFile,omitempty"`
	ImageFile                string `protobuf:"bytes,5,opt,name=imageFile,proto3" json:"imageFile,omitempty"`
	StartDate                string `protobuf:"bytes,6,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate                  string `protobuf:"bytes,7,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CategoryId               int64  `protobuf:"varint,8,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	PosId                    int64  `protobuf:"varint,9,opt,name=posId,proto3" json:"posId,omitempty"`
	ServiceTemplateId        int64  `protobuf:"varint,10,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	ServiceTemplateRoutineId int64  `protobuf:"varint,11,opt,name=serviceTemplateRoutineId,proto3" json:"serviceTemplateRoutineId,omitempty"`
	Gender                   int64  `protobuf:"varint,12,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *CreateRoutineRequest) Reset() {
	*x = CreateRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineRequest) ProtoMessage() {}

func (x *CreateRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineRequest.ProtoReflect.Descriptor instead.
func (*CreateRoutineRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{17}
}

func (x *CreateRoutineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateRoutineRequest) GetAnimationFile() string {
	if x != nil {
		return x.AnimationFile
	}
	return ""
}

func (x *CreateRoutineRequest) GetSoundFile() string {
	if x != nil {
		return x.SoundFile
	}
	return ""
}

func (x *CreateRoutineRequest) GetImageFile() string {
	if x != nil {
		return x.ImageFile
	}
	return ""
}

func (x *CreateRoutineRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateRoutineRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateRoutineRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateRoutineRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *CreateRoutineRequest) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *CreateRoutineRequest) GetServiceTemplateRoutineId() int64 {
	if x != nil {
		return x.ServiceTemplateRoutineId
	}
	return 0
}

func (x *CreateRoutineRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type CreateRoutineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail                   string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	AnimationFile            string `protobuf:"bytes,4,opt,name=animationFile,proto3" json:"animationFile,omitempty"`
	SoundFile                string `protobuf:"bytes,5,opt,name=soundFile,proto3" json:"soundFile,omitempty"`
	ImageFile                string `protobuf:"bytes,6,opt,name=imageFile,proto3" json:"imageFile,omitempty"`
	PosId                    int64  `protobuf:"varint,7,opt,name=posId,proto3" json:"posId,omitempty"`
	ServiceTemplateId        int64  `protobuf:"varint,8,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	CategoryId               int64  `protobuf:"varint,9,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	StartDate                string `protobuf:"bytes,10,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate                  string `protobuf:"bytes,11,opt,name=endDate,proto3" json:"endDate,omitempty"`
	ServiceTemplateRoutineId int64  `protobuf:"varint,12,opt,name=serviceTemplateRoutineId,proto3" json:"serviceTemplateRoutineId,omitempty"`
	Gender                   int64  `protobuf:"varint,13,opt,name=gender,proto3" json:"gender,omitempty"`
	CreatedAt                string `protobuf:"bytes,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt                string `protobuf:"bytes,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateRoutineResponse) Reset() {
	*x = CreateRoutineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineResponse) ProtoMessage() {}

func (x *CreateRoutineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineResponse.ProtoReflect.Descriptor instead.
func (*CreateRoutineResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{18}
}

func (x *CreateRoutineResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateRoutineResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CreateRoutineResponse) GetAnimationFile() string {
	if x != nil {
		return x.AnimationFile
	}
	return ""
}

func (x *CreateRoutineResponse) GetSoundFile() string {
	if x != nil {
		return x.SoundFile
	}
	return ""
}

func (x *CreateRoutineResponse) GetImageFile() string {
	if x != nil {
		return x.ImageFile
	}
	return ""
}

func (x *CreateRoutineResponse) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *CreateRoutineResponse) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *CreateRoutineResponse) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateRoutineResponse) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateRoutineResponse) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateRoutineResponse) GetServiceTemplateRoutineId() int64 {
	if x != nil {
		return x.ServiceTemplateRoutineId
	}
	return 0
}

func (x *CreateRoutineResponse) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CreateRoutineResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateRoutineResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosId      int64   `protobuf:"varint,1,opt,name=posId,proto3" json:"posId,omitempty"`
	CategoryId int64   `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Page       int64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage    int64   `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Gender     int64   `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Ids        []int64 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetListRoutineRequest) Reset() {
	*x = GetListRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineRequest) ProtoMessage() {}

func (x *GetListRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineRequest.ProtoReflect.Descriptor instead.
func (*GetListRoutineRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{19}
}

func (x *GetListRoutineRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *GetListRoutineRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetListRoutineRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRoutineRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListRoutineRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *GetListRoutineRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetListRoutineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListRoutineResponse []*CreateRoutineResponse `protobuf:"bytes,1,rep,name=GetListRoutineResponse,proto3" json:"GetListRoutineResponse,omitempty"`
}

func (x *GetListRoutineResponse) Reset() {
	*x = GetListRoutineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineResponse) ProtoMessage() {}

func (x *GetListRoutineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineResponse.ProtoReflect.Descriptor instead.
func (*GetListRoutineResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{20}
}

func (x *GetListRoutineResponse) GetGetListRoutineResponse() []*CreateRoutineResponse {
	if x != nil {
		return x.GetListRoutineResponse
	}
	return nil
}

type UpdateRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Detail                   string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	AnimationFile            string `protobuf:"bytes,4,opt,name=animationFile,proto3" json:"animationFile,omitempty"`
	SoundFile                string `protobuf:"bytes,5,opt,name=soundFile,proto3" json:"soundFile,omitempty"`
	ImageFile                string `protobuf:"bytes,6,opt,name=imageFile,proto3" json:"imageFile,omitempty"`
	PosId                    int64  `protobuf:"varint,7,opt,name=posId,proto3" json:"posId,omitempty"`
	ServiceTemplateId        int64  `protobuf:"varint,8,opt,name=serviceTemplateId,proto3" json:"serviceTemplateId,omitempty"`
	CategoryId               int64  `protobuf:"varint,9,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	StartDate                string `protobuf:"bytes,10,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate                  string `protobuf:"bytes,11,opt,name=endDate,proto3" json:"endDate,omitempty"`
	ServiceTemplateRoutineId int64  `protobuf:"varint,12,opt,name=serviceTemplateRoutineId,proto3" json:"serviceTemplateRoutineId,omitempty"`
	Gender                   int64  `protobuf:"varint,13,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *UpdateRoutineRequest) Reset() {
	*x = UpdateRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoutineRequest) ProtoMessage() {}

func (x *UpdateRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoutineRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoutineRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateRoutineRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoutineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoutineRequest) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *UpdateRoutineRequest) GetAnimationFile() string {
	if x != nil {
		return x.AnimationFile
	}
	return ""
}

func (x *UpdateRoutineRequest) GetSoundFile() string {
	if x != nil {
		return x.SoundFile
	}
	return ""
}

func (x *UpdateRoutineRequest) GetImageFile() string {
	if x != nil {
		return x.ImageFile
	}
	return ""
}

func (x *UpdateRoutineRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *UpdateRoutineRequest) GetServiceTemplateId() int64 {
	if x != nil {
		return x.ServiceTemplateId
	}
	return 0
}

func (x *UpdateRoutineRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *UpdateRoutineRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdateRoutineRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UpdateRoutineRequest) GetServiceTemplateRoutineId() int64 {
	if x != nil {
		return x.ServiceTemplateRoutineId
	}
	return 0
}

func (x *UpdateRoutineRequest) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type DeleteRoutineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PosId int64 `protobuf:"varint,2,opt,name=posId,proto3" json:"posId,omitempty"`
}

func (x *DeleteRoutineRequest) Reset() {
	*x = DeleteRoutineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoutineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoutineRequest) ProtoMessage() {}

func (x *DeleteRoutineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoutineRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoutineRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteRoutineRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteRoutineRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

type CreateCustomerMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosId            []int64 `protobuf:"varint,1,rep,packed,name=posId,proto3" json:"posId,omitempty"`
	Maker            string  `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber     string  `protobuf:"bytes,3,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	ResolutionWidth  string  `protobuf:"bytes,4,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight string  `protobuf:"bytes,5,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	Rotation         string  `protobuf:"bytes,6,opt,name=rotation,proto3" json:"rotation,omitempty"`
	MonitorStatus    string  `protobuf:"bytes,7,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	AvatarId         int64   `protobuf:"varint,12,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
}

func (x *CreateCustomerMonitorRequest) Reset() {
	*x = CreateCustomerMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerMonitorRequest) ProtoMessage() {}

func (x *CreateCustomerMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerMonitorRequest.ProtoReflect.Descriptor instead.
func (*CreateCustomerMonitorRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{23}
}

func (x *CreateCustomerMonitorRequest) GetPosId() []int64 {
	if x != nil {
		return x.PosId
	}
	return nil
}

func (x *CreateCustomerMonitorRequest) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *CreateCustomerMonitorRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CreateCustomerMonitorRequest) GetResolutionWidth() string {
	if x != nil {
		return x.ResolutionWidth
	}
	return ""
}

func (x *CreateCustomerMonitorRequest) GetResolutionHeight() string {
	if x != nil {
		return x.ResolutionHeight
	}
	return ""
}

func (x *CreateCustomerMonitorRequest) GetRotation() string {
	if x != nil {
		return x.Rotation
	}
	return ""
}

func (x *CreateCustomerMonitorRequest) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *CreateCustomerMonitorRequest) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type CreateCustomerMonitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCustomerMonitorResponse) Reset() {
	*x = CreateCustomerMonitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerMonitorResponse) ProtoMessage() {}

func (x *CreateCustomerMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerMonitorResponse.ProtoReflect.Descriptor instead.
func (*CreateCustomerMonitorResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{24}
}

func (x *CreateCustomerMonitorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCustomerMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	POSid int64 `protobuf:"varint,2,opt,name=POSid,proto3" json:"POSid,omitempty"`
}

func (x *GetCustomerMonitorRequest) Reset() {
	*x = GetCustomerMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerMonitorRequest) ProtoMessage() {}

func (x *GetCustomerMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerMonitorRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerMonitorRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{25}
}

func (x *GetCustomerMonitorRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCustomerMonitorRequest) GetPOSid() int64 {
	if x != nil {
		return x.POSid
	}
	return 0
}

type GetCustomerMonitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PosId            int64  `protobuf:"varint,2,opt,name=posId,proto3" json:"posId,omitempty"`
	Maker            string `protobuf:"bytes,3,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber     string `protobuf:"bytes,4,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	ResolutionWidth  string `protobuf:"bytes,5,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight string `protobuf:"bytes,6,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	Rotation         string `protobuf:"bytes,7,opt,name=rotation,proto3" json:"rotation,omitempty"`
	MonitorStatus    string `protobuf:"bytes,8,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	CreatedAt        string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	AvatarId         int64  `protobuf:"varint,12,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
}

func (x *GetCustomerMonitorResponse) Reset() {
	*x = GetCustomerMonitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerMonitorResponse) ProtoMessage() {}

func (x *GetCustomerMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerMonitorResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerMonitorResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{26}
}

func (x *GetCustomerMonitorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCustomerMonitorResponse) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *GetCustomerMonitorResponse) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetResolutionWidth() string {
	if x != nil {
		return x.ResolutionWidth
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetResolutionHeight() string {
	if x != nil {
		return x.ResolutionHeight
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetRotation() string {
	if x != nil {
		return x.Rotation
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetCustomerMonitorResponse) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type UpdateCustomerMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PosId            int64  `protobuf:"varint,2,opt,name=posId,proto3" json:"posId,omitempty"`
	Maker            string `protobuf:"bytes,3,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber     string `protobuf:"bytes,4,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	ResolutionWidth  string `protobuf:"bytes,5,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight string `protobuf:"bytes,6,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	Rotation         string `protobuf:"bytes,7,opt,name=rotation,proto3" json:"rotation,omitempty"`
	MonitorStatus    string `protobuf:"bytes,8,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	AvatarId         int64  `protobuf:"varint,9,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
}

func (x *UpdateCustomerMonitorRequest) Reset() {
	*x = UpdateCustomerMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerMonitorRequest) ProtoMessage() {}

func (x *UpdateCustomerMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerMonitorRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomerMonitorRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateCustomerMonitorRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCustomerMonitorRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *UpdateCustomerMonitorRequest) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *UpdateCustomerMonitorRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *UpdateCustomerMonitorRequest) GetResolutionWidth() string {
	if x != nil {
		return x.ResolutionWidth
	}
	return ""
}

func (x *UpdateCustomerMonitorRequest) GetResolutionHeight() string {
	if x != nil {
		return x.ResolutionHeight
	}
	return ""
}

func (x *UpdateCustomerMonitorRequest) GetRotation() string {
	if x != nil {
		return x.Rotation
	}
	return ""
}

func (x *UpdateCustomerMonitorRequest) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *UpdateCustomerMonitorRequest) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type UpdateCustomerMonitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PosId            int64  `protobuf:"varint,2,opt,name=posId,proto3" json:"posId,omitempty"`
	Maker            string `protobuf:"bytes,3,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber     string `protobuf:"bytes,4,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	ResolutionWidth  string `protobuf:"bytes,5,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight string `protobuf:"bytes,6,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	Rotation         string `protobuf:"bytes,7,opt,name=rotation,proto3" json:"rotation,omitempty"`
	MonitorStatus    string `protobuf:"bytes,8,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	CreatedAt        string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	AvatarId         int64  `protobuf:"varint,12,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
}

func (x *UpdateCustomerMonitorResponse) Reset() {
	*x = UpdateCustomerMonitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerMonitorResponse) ProtoMessage() {}

func (x *UpdateCustomerMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerMonitorResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomerMonitorResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateCustomerMonitorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCustomerMonitorResponse) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *UpdateCustomerMonitorResponse) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetResolutionWidth() string {
	if x != nil {
		return x.ResolutionWidth
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetResolutionHeight() string {
	if x != nil {
		return x.ResolutionHeight
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetRotation() string {
	if x != nil {
		return x.Rotation
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UpdateCustomerMonitorResponse) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type CreateRoutineCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateRoutineCategoryRequest) Reset() {
	*x = CreateRoutineCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineCategoryRequest) ProtoMessage() {}

func (x *CreateRoutineCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateRoutineCategoryRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{29}
}

func (x *CreateRoutineCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineCategoryRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateRoutineCategoryRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateRoutineCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateRoutineCategoryResponse) Reset() {
	*x = CreateRoutineCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoutineCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoutineCategoryResponse) ProtoMessage() {}

func (x *CreateRoutineCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoutineCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateRoutineCategoryResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{30}
}

func (x *CreateRoutineCategoryResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateRoutineCategoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoutineCategoryResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateRoutineCategoryResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListRoutineCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int64 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *GetListRoutineCategoryRequest) Reset() {
	*x = GetListRoutineCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineCategoryRequest) ProtoMessage() {}

func (x *GetListRoutineCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetListRoutineCategoryRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{31}
}

func (x *GetListRoutineCategoryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRoutineCategoryRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type GetListRoutineCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListRoutineCategoryResponse []*CreateRoutineCategoryResponse `protobuf:"bytes,1,rep,name=GetListRoutineCategoryResponse,proto3" json:"GetListRoutineCategoryResponse,omitempty"`
}

func (x *GetListRoutineCategoryResponse) Reset() {
	*x = GetListRoutineCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRoutineCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRoutineCategoryResponse) ProtoMessage() {}

func (x *GetListRoutineCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRoutineCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetListRoutineCategoryResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{32}
}

func (x *GetListRoutineCategoryResponse) GetGetListRoutineCategoryResponse() []*CreateRoutineCategoryResponse {
	if x != nil {
		return x.GetListRoutineCategoryResponse
	}
	return nil
}

type UpdateRoutineCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateRoutineCategoryRequest) Reset() {
	*x = UpdateRoutineCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoutineCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoutineCategoryRequest) ProtoMessage() {}

func (x *UpdateRoutineCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoutineCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoutineCategoryRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateRoutineCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoutineCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maker              string `protobuf:"bytes,1,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber       string `protobuf:"bytes,2,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	MonitorStatus      string `protobuf:"bytes,3,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	ResolutionWidth    int64  `protobuf:"varint,4,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight   int64  `protobuf:"varint,5,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	HorizontalRotation bool   `protobuf:"varint,6,opt,name=horizontalRotation,proto3" json:"horizontalRotation,omitempty"`
	PosId              int64  `protobuf:"varint,7,opt,name=posId,proto3" json:"posId,omitempty"`
}

func (x *CreateMonitorRequest) Reset() {
	*x = CreateMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorRequest) ProtoMessage() {}

func (x *CreateMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorRequest.ProtoReflect.Descriptor instead.
func (*CreateMonitorRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{34}
}

func (x *CreateMonitorRequest) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *CreateMonitorRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CreateMonitorRequest) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *CreateMonitorRequest) GetResolutionWidth() int64 {
	if x != nil {
		return x.ResolutionWidth
	}
	return 0
}

func (x *CreateMonitorRequest) GetResolutionHeight() int64 {
	if x != nil {
		return x.ResolutionHeight
	}
	return 0
}

func (x *CreateMonitorRequest) GetHorizontalRotation() bool {
	if x != nil {
		return x.HorizontalRotation
	}
	return false
}

func (x *CreateMonitorRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

type CreateMonitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maker              string `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber       string `protobuf:"bytes,3,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	MonitorStatus      string `protobuf:"bytes,4,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	ResolutionWidth    int64  `protobuf:"varint,5,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight   int64  `protobuf:"varint,6,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	HorizontalRotation bool   `protobuf:"varint,7,opt,name=horizontalRotation,proto3" json:"horizontalRotation,omitempty"`
	PosId              int64  `protobuf:"varint,8,opt,name=posId,proto3" json:"posId,omitempty"`
	CreatedAt          string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateMonitorResponse) Reset() {
	*x = CreateMonitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorResponse) ProtoMessage() {}

func (x *CreateMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorResponse.ProtoReflect.Descriptor instead.
func (*CreateMonitorResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{35}
}

func (x *CreateMonitorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateMonitorResponse) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *CreateMonitorResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CreateMonitorResponse) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *CreateMonitorResponse) GetResolutionWidth() int64 {
	if x != nil {
		return x.ResolutionWidth
	}
	return 0
}

func (x *CreateMonitorResponse) GetResolutionHeight() int64 {
	if x != nil {
		return x.ResolutionHeight
	}
	return 0
}

func (x *CreateMonitorResponse) GetHorizontalRotation() bool {
	if x != nil {
		return x.HorizontalRotation
	}
	return false
}

func (x *CreateMonitorResponse) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *CreateMonitorResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateMonitorResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int64 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	PosId   int64 `protobuf:"varint,3,opt,name=posId,proto3" json:"posId,omitempty"`
}

func (x *GetListMonitorRequest) Reset() {
	*x = GetListMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListMonitorRequest) ProtoMessage() {}

func (x *GetListMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListMonitorRequest.ProtoReflect.Descriptor instead.
func (*GetListMonitorRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{36}
}

func (x *GetListMonitorRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListMonitorRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListMonitorRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

type GetListMonitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListMonitorResponse []*CreateMonitorResponse `protobuf:"bytes,1,rep,name=GetListMonitorResponse,proto3" json:"GetListMonitorResponse,omitempty"`
}

func (x *GetListMonitorResponse) Reset() {
	*x = GetListMonitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListMonitorResponse) ProtoMessage() {}

func (x *GetListMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListMonitorResponse.ProtoReflect.Descriptor instead.
func (*GetListMonitorResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{37}
}

func (x *GetListMonitorResponse) GetGetListMonitorResponse() []*CreateMonitorResponse {
	if x != nil {
		return x.GetListMonitorResponse
	}
	return nil
}

type UpdateMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maker              string `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber       string `protobuf:"bytes,3,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	MonitorStatus      string `protobuf:"bytes,4,opt,name=monitorStatus,proto3" json:"monitorStatus,omitempty"`
	ResolutionWidth    int64  `protobuf:"varint,5,opt,name=resolutionWidth,proto3" json:"resolutionWidth,omitempty"`
	ResolutionHeight   int64  `protobuf:"varint,6,opt,name=resolutionHeight,proto3" json:"resolutionHeight,omitempty"`
	HorizontalRotation bool   `protobuf:"varint,7,opt,name=horizontalRotation,proto3" json:"horizontalRotation,omitempty"`
	PosId              int64  `protobuf:"varint,8,opt,name=posId,proto3" json:"posId,omitempty"`
}

func (x *UpdateMonitorRequest) Reset() {
	*x = UpdateMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorRequest) ProtoMessage() {}

func (x *UpdateMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorRequest.ProtoReflect.Descriptor instead.
func (*UpdateMonitorRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateMonitorRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMonitorRequest) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *UpdateMonitorRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *UpdateMonitorRequest) GetMonitorStatus() string {
	if x != nil {
		return x.MonitorStatus
	}
	return ""
}

func (x *UpdateMonitorRequest) GetResolutionWidth() int64 {
	if x != nil {
		return x.ResolutionWidth
	}
	return 0
}

func (x *UpdateMonitorRequest) GetResolutionHeight() int64 {
	if x != nil {
		return x.ResolutionHeight
	}
	return 0
}

func (x *UpdateMonitorRequest) GetHorizontalRotation() bool {
	if x != nil {
		return x.HorizontalRotation
	}
	return false
}

func (x *UpdateMonitorRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maker        string `protobuf:"bytes,1,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	DeviceType   string `protobuf:"bytes,3,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	UsePurpose   string `protobuf:"bytes,4,opt,name=usePurpose,proto3" json:"usePurpose,omitempty"`
	Owner        int64  `protobuf:"varint,5,opt,name=owner,proto3" json:"owner,omitempty"`
	OnsiteType   string `protobuf:"bytes,6,opt,name=onsiteType,proto3" json:"onsiteType,omitempty"`
	AccountId    int64  `protobuf:"varint,7,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PosId        int64  `protobuf:"varint,8,opt,name=posId,proto3" json:"posId,omitempty"`
	CenterId     int64  `protobuf:"varint,9,opt,name=centerId,proto3" json:"centerId,omitempty"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{39}
}

func (x *CreateDeviceRequest) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *CreateDeviceRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CreateDeviceRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *CreateDeviceRequest) GetUsePurpose() string {
	if x != nil {
		return x.UsePurpose
	}
	return ""
}

func (x *CreateDeviceRequest) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *CreateDeviceRequest) GetOnsiteType() string {
	if x != nil {
		return x.OnsiteType
	}
	return ""
}

func (x *CreateDeviceRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreateDeviceRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *CreateDeviceRequest) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

type CreateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maker        string `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber string `protobuf:"bytes,3,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	DeviceType   string `protobuf:"bytes,4,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	UsePurpose   string `protobuf:"bytes,5,opt,name=usePurpose,proto3" json:"usePurpose,omitempty"`
	Owner        int64  `protobuf:"varint,6,opt,name=owner,proto3" json:"owner,omitempty"`
	OnsiteType   string `protobuf:"bytes,7,opt,name=onsiteType,proto3" json:"onsiteType,omitempty"`
	AccountId    int64  `protobuf:"varint,8,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PosId        int64  `protobuf:"varint,9,opt,name=posId,proto3" json:"posId,omitempty"`
	CenterId     int64  `protobuf:"varint,10,opt,name=centerId,proto3" json:"centerId,omitempty"`
	CreatedAt    string `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    string `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateDeviceResponse) Reset() {
	*x = CreateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceResponse) ProtoMessage() {}

func (x *CreateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{40}
}

func (x *CreateDeviceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateDeviceResponse) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *CreateDeviceResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CreateDeviceResponse) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *CreateDeviceResponse) GetUsePurpose() string {
	if x != nil {
		return x.UsePurpose
	}
	return ""
}

func (x *CreateDeviceResponse) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *CreateDeviceResponse) GetOnsiteType() string {
	if x != nil {
		return x.OnsiteType
	}
	return ""
}

func (x *CreateDeviceResponse) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreateDeviceResponse) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *CreateDeviceResponse) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

func (x *CreateDeviceResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateDeviceResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maker        string `protobuf:"bytes,2,opt,name=maker,proto3" json:"maker,omitempty"`
	SerialNumber string `protobuf:"bytes,3,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	DeviceType   string `protobuf:"bytes,4,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	UsePurpose   string `protobuf:"bytes,5,opt,name=usePurpose,proto3" json:"usePurpose,omitempty"`
	Owner        int64  `protobuf:"varint,6,opt,name=owner,proto3" json:"owner,omitempty"`
	OnsiteType   string `protobuf:"bytes,7,opt,name=onsiteType,proto3" json:"onsiteType,omitempty"`
	AccountId    int64  `protobuf:"varint,8,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PosId        int64  `protobuf:"varint,9,opt,name=posId,proto3" json:"posId,omitempty"`
	CenterId     int64  `protobuf:"varint,10,opt,name=centerId,proto3" json:"centerId,omitempty"`
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateDeviceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeviceRequest) GetMaker() string {
	if x != nil {
		return x.Maker
	}
	return ""
}

func (x *UpdateDeviceRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *UpdateDeviceRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *UpdateDeviceRequest) GetUsePurpose() string {
	if x != nil {
		return x.UsePurpose
	}
	return ""
}

func (x *UpdateDeviceRequest) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *UpdateDeviceRequest) GetOnsiteType() string {
	if x != nil {
		return x.OnsiteType
	}
	return ""
}

func (x *UpdateDeviceRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *UpdateDeviceRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *UpdateDeviceRequest) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

type GetListDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage   int64 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	AccountId int64 `protobuf:"varint,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PosId     int64 `protobuf:"varint,4,opt,name=posId,proto3" json:"posId,omitempty"`
	CenterId  int64 `protobuf:"varint,5,opt,name=centerId,proto3" json:"centerId,omitempty"`
}

func (x *GetListDeviceRequest) Reset() {
	*x = GetListDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListDeviceRequest) ProtoMessage() {}

func (x *GetListDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetListDeviceRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{42}
}

func (x *GetListDeviceRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListDeviceRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListDeviceRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetListDeviceRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *GetListDeviceRequest) GetCenterId() int64 {
	if x != nil {
		return x.CenterId
	}
	return 0
}

type GetListDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListDeviceResponse []*CreateDeviceResponse `protobuf:"bytes,1,rep,name=GetListDeviceResponse,proto3" json:"GetListDeviceResponse,omitempty"`
}

func (x *GetListDeviceResponse) Reset() {
	*x = GetListDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListDeviceResponse) ProtoMessage() {}

func (x *GetListDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetListDeviceResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{43}
}

func (x *GetListDeviceResponse) GetGetListDeviceResponse() []*CreateDeviceResponse {
	if x != nil {
		return x.GetListDeviceResponse
	}
	return nil
}

type CreateIpCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPrimaryCamera bool   `protobuf:"varint,1,opt,name=isPrimaryCamera,proto3" json:"isPrimaryCamera,omitempty"`
	PublicURI       string `protobuf:"bytes,2,opt,name=publicURI,proto3" json:"publicURI,omitempty"`
	PrivateURI      string `protobuf:"bytes,3,opt,name=privateURI,proto3" json:"privateURI,omitempty"`
	DeviceId        int64  `protobuf:"varint,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *CreateIpCameraRequest) Reset() {
	*x = CreateIpCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIpCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIpCameraRequest) ProtoMessage() {}

func (x *CreateIpCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIpCameraRequest.ProtoReflect.Descriptor instead.
func (*CreateIpCameraRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{44}
}

func (x *CreateIpCameraRequest) GetIsPrimaryCamera() bool {
	if x != nil {
		return x.IsPrimaryCamera
	}
	return false
}

func (x *CreateIpCameraRequest) GetPublicURI() string {
	if x != nil {
		return x.PublicURI
	}
	return ""
}

func (x *CreateIpCameraRequest) GetPrivateURI() string {
	if x != nil {
		return x.PrivateURI
	}
	return ""
}

func (x *CreateIpCameraRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type CreateIpCameraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsPrimaryCamera bool   `protobuf:"varint,2,opt,name=isPrimaryCamera,proto3" json:"isPrimaryCamera,omitempty"`
	PublicURI       string `protobuf:"bytes,3,opt,name=publicURI,proto3" json:"publicURI,omitempty"`
	PrivateURI      string `protobuf:"bytes,4,opt,name=privateURI,proto3" json:"privateURI,omitempty"`
	DeviceId        int64  `protobuf:"varint,5,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	CreatedAt       string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateIpCameraResponse) Reset() {
	*x = CreateIpCameraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIpCameraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIpCameraResponse) ProtoMessage() {}

func (x *CreateIpCameraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIpCameraResponse.ProtoReflect.Descriptor instead.
func (*CreateIpCameraResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{45}
}

func (x *CreateIpCameraResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateIpCameraResponse) GetIsPrimaryCamera() bool {
	if x != nil {
		return x.IsPrimaryCamera
	}
	return false
}

func (x *CreateIpCameraResponse) GetPublicURI() string {
	if x != nil {
		return x.PublicURI
	}
	return ""
}

func (x *CreateIpCameraResponse) GetPrivateURI() string {
	if x != nil {
		return x.PrivateURI
	}
	return ""
}

func (x *CreateIpCameraResponse) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *CreateIpCameraResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateIpCameraResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListIpCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage   int64   `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	PosId     int64   `protobuf:"varint,3,opt,name=posId,proto3" json:"posId,omitempty"`
	DeviceIds []int64 `protobuf:"varint,4,rep,packed,name=deviceIds,proto3" json:"deviceIds,omitempty"`
}

func (x *GetListIpCameraRequest) Reset() {
	*x = GetListIpCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListIpCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListIpCameraRequest) ProtoMessage() {}

func (x *GetListIpCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListIpCameraRequest.ProtoReflect.Descriptor instead.
func (*GetListIpCameraRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{46}
}

func (x *GetListIpCameraRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListIpCameraRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetListIpCameraRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *GetListIpCameraRequest) GetDeviceIds() []int64 {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type GetListIpCameraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetListIpCameraResponse []*CreateIpCameraResponse `protobuf:"bytes,1,rep,name=GetListIpCameraResponse,proto3" json:"GetListIpCameraResponse,omitempty"`
}

func (x *GetListIpCameraResponse) Reset() {
	*x = GetListIpCameraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListIpCameraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListIpCameraResponse) ProtoMessage() {}

func (x *GetListIpCameraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListIpCameraResponse.ProtoReflect.Descriptor instead.
func (*GetListIpCameraResponse) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{47}
}

func (x *GetListIpCameraResponse) GetGetListIpCameraResponse() []*CreateIpCameraResponse {
	if x != nil {
		return x.GetListIpCameraResponse
	}
	return nil
}

type UpdateIpCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsPrimaryCamera bool   `protobuf:"varint,2,opt,name=isPrimaryCamera,proto3" json:"isPrimaryCamera,omitempty"`
	PublicURI       string `protobuf:"bytes,3,opt,name=publicURI,proto3" json:"publicURI,omitempty"`
	PrivateURI      string `protobuf:"bytes,4,opt,name=privateURI,proto3" json:"privateURI,omitempty"`
	DeviceId        int64  `protobuf:"varint,5,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *UpdateIpCameraRequest) Reset() {
	*x = UpdateIpCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIpCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIpCameraRequest) ProtoMessage() {}

func (x *UpdateIpCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIpCameraRequest.ProtoReflect.Descriptor instead.
func (*UpdateIpCameraRequest) Descriptor() ([]byte, []int) {
	return file_pos_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateIpCameraRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIpCameraRequest) GetIsPrimaryCamera() bool {
	if x != nil {
		return x.IsPrimaryCamera
	}
	return false
}

func (x *UpdateIpCameraRequest) GetPublicURI() string {
	if x != nil {
		return x.PublicURI
	}
	return ""
}

func (x *UpdateIpCameraRequest) GetPrivateURI() string {
	if x != nil {
		return x.PrivateURI
	}
	return ""
}

func (x *UpdateIpCameraRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

var File_pos_proto protoreflect.FileDescriptor

var file_pos_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x6f, 0x73,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x34, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x54, 0x6d, 0x70, 0x47, 0x65, 0x74,
	0x49, 0x50, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x62, 0x69, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69,
	0x6e, 0x6f, 0x62, 0x69, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x22, 0x95,
	0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3e,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x36,
	0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x26, 0x67,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x26, 0x67,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x05, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x66, 0x65, 0x6d, 0x61,
	0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x17,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x17, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x75, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xeb, 0x05, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6c,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65,
	0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d,
	0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xae, 0x05, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e,
	0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10,
	0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x38, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x51, 0x0a, 0x1f, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x52, 0x0a,
	0x20, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x94, 0x03, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x22, 0xe1, 0x03, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x6f, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x03, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a,
	0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x22, 0x3c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x22,
	0xa2, 0x02, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x4f, 0x53, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x50, 0x4f, 0x53, 0x69, 0x64, 0x22, 0xec, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0xef, 0x02, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x6f, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x6e,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7f,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x4d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x8c,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x1e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x92, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x22, 0xdf, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f,
	0x6e, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x6f, 0x73, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x22, 0x95, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x6f, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xe2, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x50, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x73,
	0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x50, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x73, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x49, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x49,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x52, 0x49, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x52, 0x49,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x49, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x49, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x52, 0x49, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x55, 0x52, 0x49, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x17, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x55, 0x52, 0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x49, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x55, 0x52, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x55, 0x52, 0x49, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x32, 0xda, 0x10, 0x0a, 0x03, 0x50, 0x4f, 0x53, 0x12, 0x48, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x19,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x12, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x79, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x18, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x24, 0x2e,
	0x70, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e,
	0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x12, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x2e,
	0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x13,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x12, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x12, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x09, 0x5a, 0x07, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pos_proto_rawDescOnce sync.Once
	file_pos_proto_rawDescData = file_pos_proto_rawDesc
)

func file_pos_proto_rawDescGZIP() []byte {
	file_pos_proto_rawDescOnce.Do(func() {
		file_pos_proto_rawDescData = protoimpl.X.CompressGZIP(file_pos_proto_rawDescData)
	})
	return file_pos_proto_rawDescData
}

var file_pos_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_pos_proto_goTypes = []interface{}{
	(*Empty)(nil),                            // 0: pos.Empty
	(*GetByIdRequest)(nil),                   // 1: pos.GetByIdRequest
	(*DeleteByIdRequest)(nil),                // 2: pos.DeleteByIdRequest
	(*DeleteResponse)(nil),                   // 3: pos.DeleteResponse
	(*TmpGetIPCameraResponse)(nil),           // 4: pos.TmpGetIPCameraResponse
	(*ListRoutineSortedByCategory)(nil),      // 5: pos.ListRoutineSortedByCategory
	(*GetListRoutineByCategoryRequest)(nil),  // 6: pos.GetListRoutineByCategoryRequest
	(*GetListRoutineByCategoryResponse)(nil), // 7: pos.GetListRoutineByCategoryResponse
	(*CreatePosRequest)(nil),                 // 8: pos.CreatePosRequest
	(*GetListPosRequest)(nil),                // 9: pos.GetListPosRequest
	(*GetListPosResponse)(nil),               // 10: pos.GetListPosResponse
	(*CreatePosResponse)(nil),                // 11: pos.CreatePosResponse
	(*UpdatePosRequest)(nil),                 // 12: pos.UpdatePosRequest
	(*TriggerEventOperatorSideRequest)(nil),  // 13: pos.TriggerEventOperatorSideRequest
	(*TriggerEventOperatorSideResponse)(nil), // 14: pos.TriggerEventOperatorSideResponse
	(*CreateManyRoutineRequest)(nil),         // 15: pos.CreateManyRoutineRequest
	(*CreateManyRoutineResponse)(nil),        // 16: pos.CreateManyRoutineResponse
	(*CreateRoutineRequest)(nil),             // 17: pos.CreateRoutineRequest
	(*CreateRoutineResponse)(nil),            // 18: pos.CreateRoutineResponse
	(*GetListRoutineRequest)(nil),            // 19: pos.GetListRoutineRequest
	(*GetListRoutineResponse)(nil),           // 20: pos.GetListRoutineResponse
	(*UpdateRoutineRequest)(nil),             // 21: pos.UpdateRoutineRequest
	(*DeleteRoutineRequest)(nil),             // 22: pos.DeleteRoutineRequest
	(*CreateCustomerMonitorRequest)(nil),     // 23: pos.CreateCustomerMonitorRequest
	(*CreateCustomerMonitorResponse)(nil),    // 24: pos.CreateCustomerMonitorResponse
	(*GetCustomerMonitorRequest)(nil),        // 25: pos.GetCustomerMonitorRequest
	(*GetCustomerMonitorResponse)(nil),       // 26: pos.GetCustomerMonitorResponse
	(*UpdateCustomerMonitorRequest)(nil),     // 27: pos.UpdateCustomerMonitorRequest
	(*UpdateCustomerMonitorResponse)(nil),    // 28: pos.UpdateCustomerMonitorResponse
	(*CreateRoutineCategoryRequest)(nil),     // 29: pos.CreateRoutineCategoryRequest
	(*CreateRoutineCategoryResponse)(nil),    // 30: pos.CreateRoutineCategoryResponse
	(*GetListRoutineCategoryRequest)(nil),    // 31: pos.GetListRoutineCategoryRequest
	(*GetListRoutineCategoryResponse)(nil),   // 32: pos.GetListRoutineCategoryResponse
	(*UpdateRoutineCategoryRequest)(nil),     // 33: pos.UpdateRoutineCategoryRequest
	(*CreateMonitorRequest)(nil),             // 34: pos.CreateMonitorRequest
	(*CreateMonitorResponse)(nil),            // 35: pos.CreateMonitorResponse
	(*GetListMonitorRequest)(nil),            // 36: pos.GetListMonitorRequest
	(*GetListMonitorResponse)(nil),           // 37: pos.GetListMonitorResponse
	(*UpdateMonitorRequest)(nil),             // 38: pos.UpdateMonitorRequest
	(*CreateDeviceRequest)(nil),              // 39: pos.CreateDeviceRequest
	(*CreateDeviceResponse)(nil),             // 40: pos.CreateDeviceResponse
	(*UpdateDeviceRequest)(nil),              // 41: pos.UpdateDeviceRequest
	(*GetListDeviceRequest)(nil),             // 42: pos.GetListDeviceRequest
	(*GetListDeviceResponse)(nil),            // 43: pos.GetListDeviceResponse
	(*CreateIpCameraRequest)(nil),            // 44: pos.CreateIpCameraRequest
	(*CreateIpCameraResponse)(nil),           // 45: pos.CreateIpCameraResponse
	(*GetListIpCameraRequest)(nil),           // 46: pos.GetListIpCameraRequest
	(*GetListIpCameraResponse)(nil),          // 47: pos.GetListIpCameraResponse
	(*UpdateIpCameraRequest)(nil),            // 48: pos.UpdateIpCameraRequest
}
var file_pos_proto_depIdxs = []int32{
	30, // 0: pos.ListRoutineSortedByCategory.category:type_name -> pos.CreateRoutineCategoryResponse
	18, // 1: pos.ListRoutineSortedByCategory.routines:type_name -> pos.CreateRoutineResponse
	5,  // 2: pos.GetListRoutineByCategoryResponse.getListRoutineSortedByCategoryResponse:type_name -> pos.ListRoutineSortedByCategory
	11, // 3: pos.GetListPosResponse.GetListPosResponse:type_name -> pos.CreatePosResponse
	17, // 4: pos.CreateManyRoutineRequest.routines:type_name -> pos.CreateRoutineRequest
	18, // 5: pos.CreateManyRoutineResponse.routines:type_name -> pos.CreateRoutineResponse
	18, // 6: pos.GetListRoutineResponse.GetListRoutineResponse:type_name -> pos.CreateRoutineResponse
	30, // 7: pos.GetListRoutineCategoryResponse.GetListRoutineCategoryResponse:type_name -> pos.CreateRoutineCategoryResponse
	35, // 8: pos.GetListMonitorResponse.GetListMonitorResponse:type_name -> pos.CreateMonitorResponse
	40, // 9: pos.GetListDeviceResponse.GetListDeviceResponse:type_name -> pos.CreateDeviceResponse
	45, // 10: pos.GetListIpCameraResponse.GetListIpCameraResponse:type_name -> pos.CreateIpCameraResponse
	17, // 11: pos.POS.CreateRoutine:input_type -> pos.CreateRoutineRequest
	1,  // 12: pos.POS.GetRoutine:input_type -> pos.GetByIdRequest
	19, // 13: pos.POS.GetListRoutine:input_type -> pos.GetListRoutineRequest
	21, // 14: pos.POS.UpdateRoutine:input_type -> pos.UpdateRoutineRequest
	22, // 15: pos.POS.DeleteRoutine:input_type -> pos.DeleteRoutineRequest
	6,  // 16: pos.POS.GetListRoutineByCategory:input_type -> pos.GetListRoutineByCategoryRequest
	15, // 17: pos.POS.CreateManyRoutine:input_type -> pos.CreateManyRoutineRequest
	13, // 18: pos.POS.TriggerEventOperatorSide:input_type -> pos.TriggerEventOperatorSideRequest
	29, // 19: pos.POS.CreateRoutineCategory:input_type -> pos.CreateRoutineCategoryRequest
	31, // 20: pos.POS.GetListRoutineCategory:input_type -> pos.GetListRoutineCategoryRequest
	1,  // 21: pos.POS.GetRoutineCategory:input_type -> pos.GetByIdRequest
	33, // 22: pos.POS.UpdateRoutineCategory:input_type -> pos.UpdateRoutineCategoryRequest
	2,  // 23: pos.POS.DeleteRoutineCategory:input_type -> pos.DeleteByIdRequest
	8,  // 24: pos.POS.CreatePos:input_type -> pos.CreatePosRequest
	1,  // 25: pos.POS.GetPos:input_type -> pos.GetByIdRequest
	9,  // 26: pos.POS.GetListPos:input_type -> pos.GetListPosRequest
	12, // 27: pos.POS.UpdatePos:input_type -> pos.UpdatePosRequest
	2,  // 28: pos.POS.DeletePos:input_type -> pos.DeleteByIdRequest
	34, // 29: pos.POS.CreateMonitor:input_type -> pos.CreateMonitorRequest
	1,  // 30: pos.POS.GetMonitor:input_type -> pos.GetByIdRequest
	36, // 31: pos.POS.GetListMonitor:input_type -> pos.GetListMonitorRequest
	38, // 32: pos.POS.UpdateMonitor:input_type -> pos.UpdateMonitorRequest
	2,  // 33: pos.POS.DeleteMonitor:input_type -> pos.DeleteByIdRequest
	44, // 34: pos.POS.CreateIpCamera:input_type -> pos.CreateIpCameraRequest
	1,  // 35: pos.POS.GetIpCamera:input_type -> pos.GetByIdRequest
	48, // 36: pos.POS.UpdateIpCamera:input_type -> pos.UpdateIpCameraRequest
	2,  // 37: pos.POS.DeleteIpCamera:input_type -> pos.DeleteByIdRequest
	46, // 38: pos.POS.GetListIpCamera:input_type -> pos.GetListIpCameraRequest
	18, // 39: pos.POS.CreateRoutine:output_type -> pos.CreateRoutineResponse
	18, // 40: pos.POS.GetRoutine:output_type -> pos.CreateRoutineResponse
	20, // 41: pos.POS.GetListRoutine:output_type -> pos.GetListRoutineResponse
	18, // 42: pos.POS.UpdateRoutine:output_type -> pos.CreateRoutineResponse
	3,  // 43: pos.POS.DeleteRoutine:output_type -> pos.DeleteResponse
	7,  // 44: pos.POS.GetListRoutineByCategory:output_type -> pos.GetListRoutineByCategoryResponse
	16, // 45: pos.POS.CreateManyRoutine:output_type -> pos.CreateManyRoutineResponse
	14, // 46: pos.POS.TriggerEventOperatorSide:output_type -> pos.TriggerEventOperatorSideResponse
	30, // 47: pos.POS.CreateRoutineCategory:output_type -> pos.CreateRoutineCategoryResponse
	32, // 48: pos.POS.GetListRoutineCategory:output_type -> pos.GetListRoutineCategoryResponse
	30, // 49: pos.POS.GetRoutineCategory:output_type -> pos.CreateRoutineCategoryResponse
	30, // 50: pos.POS.UpdateRoutineCategory:output_type -> pos.CreateRoutineCategoryResponse
	3,  // 51: pos.POS.DeleteRoutineCategory:output_type -> pos.DeleteResponse
	11, // 52: pos.POS.CreatePos:output_type -> pos.CreatePosResponse
	11, // 53: pos.POS.GetPos:output_type -> pos.CreatePosResponse
	10, // 54: pos.POS.GetListPos:output_type -> pos.GetListPosResponse
	11, // 55: pos.POS.UpdatePos:output_type -> pos.CreatePosResponse
	3,  // 56: pos.POS.DeletePos:output_type -> pos.DeleteResponse
	35, // 57: pos.POS.CreateMonitor:output_type -> pos.CreateMonitorResponse
	35, // 58: pos.POS.GetMonitor:output_type -> pos.CreateMonitorResponse
	37, // 59: pos.POS.GetListMonitor:output_type -> pos.GetListMonitorResponse
	35, // 60: pos.POS.UpdateMonitor:output_type -> pos.CreateMonitorResponse
	3,  // 61: pos.POS.DeleteMonitor:output_type -> pos.DeleteResponse
	45, // 62: pos.POS.CreateIpCamera:output_type -> pos.CreateIpCameraResponse
	45, // 63: pos.POS.GetIpCamera:output_type -> pos.CreateIpCameraResponse
	45, // 64: pos.POS.UpdateIpCamera:output_type -> pos.CreateIpCameraResponse
	3,  // 65: pos.POS.DeleteIpCamera:output_type -> pos.DeleteResponse
	47, // 66: pos.POS.GetListIpCamera:output_type -> pos.GetListIpCameraResponse
	39, // [39:67] is the sub-list for method output_type
	11, // [11:39] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pos_proto_init() }
func file_pos_proto_init() {
	if File_pos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmpGetIPCameraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutineSortedByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineByCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineByCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListPosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListPosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerEventOperatorSideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerEventOperatorSideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManyRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManyRoutineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoutineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerMonitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerMonitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerMonitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoutineCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRoutineCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoutineCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMonitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListMonitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIpCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIpCameraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListIpCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListIpCameraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIpCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pos_proto_goTypes,
		DependencyIndexes: file_pos_proto_depIdxs,
		MessageInfos:      file_pos_proto_msgTypes,
	}.Build()
	File_pos_proto = out.File
	file_pos_proto_rawDesc = nil
	file_pos_proto_goTypes = nil
	file_pos_proto_depIdxs = nil
}
